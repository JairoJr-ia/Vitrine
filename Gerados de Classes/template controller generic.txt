ArqController.Add('unit Automa.Controller.Grupo;');
ArqController.Add(' ');
ArqController.Add('interface');
ArqController.Add(' ');
ArqController.Add('uses');
ArqController.Add('  Automa.Model.DAOGeneric,');
ArqController.Add('  Entidade.Grupo,');
ArqController.Add('  Automa.Controller.DAOGeneric.Interfaces,');
ArqController.Add('  Data.DB,');
ArqController.Add('  VCL.Forms;');
ArqController.Add(' ');
ArqController.Add('type');
ArqController.Add('  TControllerGrupo<T : class, constructor> = class(TInterfacedObject, iControllerDAOGeneric<T>)');
ArqController.Add('    private');
ArqController.Add('      FDAO : iDAOGeneric<T>;');
ArqController.Add('      FOrderBy : String;');
ArqController.Add('      FWhere, FFiltro,FFirst, FSkip : String;');
ArqController.Add(' ');
ArqController.Add('    public');
ArqController.Add('      constructor Create;');
ArqController.Add('      destructor Destroy; override;');
ArqController.Add('      class function New : iControllerDAOGeneric<T>;');
ArqController.Add(' ');
ArqController.Add('      function Insert   : iControllerDAOGeneric<T>; overload;');
ArqController.Add('      function Insert(aValue : T) : iControllerDAOGeneric<T>; overload;');
ArqController.Add(' ');
ArqController.Add('      function Update   : iControllerDAOGeneric<T>; overload;');
ArqController.Add('      function Update(aValue : T)   : iControllerDAOGeneric<T>; overload;');
ArqController.Add(' ');
ArqController.Add('      function Delete   : iControllerDAOGeneric<T>; overload;');
ArqController.Add('      function Delete(aValue : T)   : iControllerDAOGeneric<T>; overload;');
ArqController.Add('      function Find     : iControllerDAOGeneric<T>; overload;');
ArqController.Add(' ');
ArqController.Add('      function Find(const aID   : Integer)   : iControllerDAOGeneric<T>; overload;');
ArqController.Add('      function Find(const aName : String)    : iControllerDAOGeneric<T>; overload;');
ArqController.Add(' ');
ArqController.Add('      function FindLast : iControllerDAOGeneric<T>;');
ArqController.Add('      function NumberRecords : Integer;');
ArqController.Add(' ');
ArqController.Add('      function DataSource(aDataSource : TDataSource) : iControllerDAOGeneric<T>;');
ArqController.Add('      function BindForm(aForm : TForm)               : iControllerDAOGeneric<T>;');
ArqController.Add(' ');
ArqController.Add('      function OrderBy(const aValue : String) : iControllerDAOGeneric<T>;');
ArqController.Add('      function Where(const aWhere, aValue : String) : iControllerDAOGeneric<T>;');
ArqController.Add('      function Limit(const aFirst, aSkip : Integer) : iControllerDAOGeneric<T>;');
ArqController.Add('  end;
ArqController.Add(' ');
ArqController.Add('implementation');
ArqController.Add(' ');
ArqController.Add('uses');
ArqController.Add('  System.SysUtils;');
ArqController.Add(' ');
ArqController.Add('{ TControllerGrupo }');
ArqController.Add(' ');ArqController.Add('function TControllerGrupo<T>.BindForm(aForm: TForm): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.DAO.BindForm(aForm);');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('constructor TControllerGrupo<T>.Create;');
ArqController.Add('var');
ArqController.Add('  FGrupo : TGRUPO;');
ArqController.Add('begin');
ArqController.Add('  FDAO := TDAOGeneric<T>.New;');
ArqController.Add(' ');
ArqController.Add('  try');
ArqController.Add('    FGrupo := TGRUPO.Create;');
ArqController.Add('    FOrderBy := FGrupo.getPK;');
ArqController.Add('  finally');
ArqController.Add('    FreeAndNil(FGrupo);');
ArqController.Add('  end;');
ArqController.Add(' ');
ArqController.Add('  FWhere := '';');
ArqController.Add('  FFiltro := '';');
ArqController.Add('  FFirst := '100';');
ArqController.Add('  FSkip := '0';');
ArqController.Add(' ');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.DataSource(');
ArqController.Add('  aDataSource: TDataSource): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.DAO.DataSource(aDataSource);');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Delete: iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.Delete;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Delete(aValue: T): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.Delete(aValue);');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('destructor TControllerGrupo<T>.Destroy;');
ArqController.Add('begin');
ArqController.Add(' ');
ArqController.Add('  inherited;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Find: iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add(' ');
ArqController.Add('  Result := Self;');
ArqController.Add(' ');
ArqController.Add('  if FWhere = '' then');
ArqController.Add('  begin');
ArqController.Add('    FDAO.DAO');
ArqController.Add('      .SQL');
ArqController.Add('        .Fields('FIRST ' + FFirst + ' SKIP ' + FSkip )');
ArqController.Add('        .Fields('GRUPO.ArqController.Add(' ')');
ArqController.Add('        .OrderBy(FOrderBy)');
ArqController.Add('        .&End');
ArqController.Add('      .Find;');
ArqController.Add(' ');
ArqController.Add('  end');
ArqController.Add('  else');
ArqController.Add('  begin');
ArqController.Add('    FDAO.DAO');
ArqController.Add('      .SQL');
ArqController.Add('        .Fields('FIRST ' + FFirst + ' SKIP ' + FSkip )');
ArqController.Add('        .Fields('GRUPO.ArqController.Add(' ')');
ArqController.Add('        .Where(FWhere+QuotedStr(FFiltro))');
ArqController.Add('        .OrderBy(FOrderBy)');
ArqController.Add('        .&End');
ArqController.Add('      .Find;');
ArqController.Add(' ');
ArqController.Add('  end;');
ArqController.Add(' ');
ArqController.Add('  FWhere := '';');
ArqController.Add('  FFiltro := '';');
ArqController.Add(' ');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Find(const aName: String): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.DAO');
ArqController.Add('    .SQL');
ArqController.Add('      .Where('NOME LIKE '+QuotedStr(aName))');
ArqController.Add('      .&End');
ArqController.Add('    .Find;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Find(const aID: Integer): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.DAO');
ArqController.Add('    .SQL');
ArqController.Add('      .Where('CODIGO = '+IntToStr(aID))');
ArqController.Add('      .&End');
ArqController.Add('    .Find;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.FindLast: iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.DAO');
ArqController.Add('    .SQL');
ArqController.Add('      .Fields('MAX(CODIGO) CODIGO')');
ArqController.Add('      .&End');
ArqController.Add('    .Find;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Insert(aValue: T): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.Insert(aValue);');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Limit(const aFirst,');
ArqController.Add('  aSkip: Integer): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FFirst := IntToStr(aFirst);');
ArqController.Add('  FSkip := IntToStr(aSkip);');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Insert: iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.Insert;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('class function TControllerGrupo<T>.New: iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self.Create;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.NumberRecords: Integer;');
ArqController.Add('begin');
ArqController.Add('  if FWhere = '' then');
ArqController.Add('  begin');
ArqController.Add('    FDAO.DAO');
ArqController.Add('      .SQL');
ArqController.Add('        .Fields('COUNT(CODIGO) QTDE')');
ArqController.Add('        .&End');
ArqController.Add('      .Find;');
ArqController.Add(' ');
ArqController.Add('  end');
ArqController.Add('  else');
ArqController.Add('  begin');
ArqController.Add('    FDAO.DAO');
ArqController.Add('      .SQL');
ArqController.Add('        .Fields('COUNT(CODIGO) QTDE')');
ArqController.Add('        .Where(FWhere+QuotedStr(FFiltro))');
ArqController.Add('        .&End');
ArqController.Add('      .Find;');
ArqController.Add(' ');
ArqController.Add('  end;');
ArqController.Add(' ');
ArqController.Add('  FWhere := '';');
ArqController.Add('  FFiltro := '';');
ArqController.Add(' ');
ArqController.Add('  Result := FDAO.DataSource.DataSet.FieldByName('QTDE').AsInteger');
ArqController.Add(' ');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.OrderBy(const aValue: String): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FOrderBy := aValue;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Update(aValue: T): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.Update(aValue);');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Where(const aWhere,aValue: String): iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FWhere := aWhere;');
ArqController.Add('  FFiltro := aValue;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('function TControllerGrupo<T>.Update: iControllerDAOGeneric<T>;');
ArqController.Add('begin');
ArqController.Add('  Result := Self;');
ArqController.Add('  FDAO.Update;');
ArqController.Add('end;');
ArqController.Add(' ');
ArqController.Add('end.');